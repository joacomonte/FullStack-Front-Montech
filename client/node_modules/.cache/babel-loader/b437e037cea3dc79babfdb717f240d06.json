{"ast":null,"code":"var _jsxFileName = \"/Users/monte/Dev/udpateFrontMontech/FullStack-Front-Montech/client/src/components/OpinionWithComments/OpinionWithComments.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useContext } from 'react';\nimport { useParams } from 'react-router-dom';\nimport './OpinionWithCommentsStyle.css';\nimport { AuthContext } from '../../helpers/AuthContext';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction OpinionWithComments(props) {\n  _s();\n\n  let {\n    id\n  } = useParams(); // returns an object of key/value pairs of URL parameters\n\n  const [commentsList, setCommentsList] = useState([]);\n  const [newComment, setNewCommement] = useState(\"\");\n  const [refresh, setRefresh] = useState(true);\n  const {\n    authState\n  } = useContext(AuthContext);\n  useEffect(() => {\n    axios.get(`https://fullstack-api-montech.herokuapp.com/comments/${id}`).then(res => {\n      setCommentsList(res.data);\n    });\n  }, [refresh]); // to refresh the component after send new comment\n\n  const deleteCommentFunc = id => {\n    axios.delete(`https://fullstack-api-montech.herokuapp.com/comments/${id}`, {\n      headers: {\n        accessToken: localStorage.getItem(\"accessToken\")\n      }\n    }).then(setTimeout(() => {\n      props.refreshFuncProp();\n    }, 100));\n    ;\n  };\n\n  const addComment = () => {\n    axios.post(\"https://fullstack-api-montech.herokuapp.com/comments/\", {\n      commentBody: newComment,\n      PostId: id\n    }, {\n      headers: {\n        accessToken: localStorage.getItem(\"accessToken\") //gettin the accessToken from \"cookies\".. \"accessToken is the key we chose\"\n\n      }\n    }).then(res => {\n      if (res.data.error) {\n        return alert(\"no estas loggeado\");\n      }\n\n      setNewCommement(\"\"); //to clear input words\n\n      props.refreshFuncProp();\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"opinionWithComments-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"opinionSection\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: props.userName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: props.opinion\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), props.comment && props.comment.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"commentTitle\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Comentarios\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), props.comment.map((comment, key) => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"commentsSection\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"commentUsername\",\n            children: [\" \", comment.username, \": \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"commentBody\",\n            children: [\" \", comment.commentBody]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 15\n          }, this), authState.username === comment.username && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"deleteIMG\",\n            style: {\n              color: 'yellow'\n            },\n            onClick: () => {\n              deleteCommentFunc(comment.id);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 17\n          }, this)]\n        }, key, true, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 13\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"footer\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"inputComment\",\n        type: \"text\",\n        placeholder: \"Coment\\xE1 algo...\",\n        autoComplete: \"off\",\n        value: newComment,\n        onChange: e => {\n          setNewCommement(e.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"buttonComment\",\n        onClick: addComment,\n        children: \"Enviar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n}\n\n_s(OpinionWithComments, \"gY/FTY5AkrTVyO94ZgdkejWyrMY=\", false, function () {\n  return [useParams];\n});\n\n_c = OpinionWithComments;\nexport default OpinionWithComments;\n\nvar _c;\n\n$RefreshReg$(_c, \"OpinionWithComments\");","map":{"version":3,"names":["React","useState","useEffect","useContext","useParams","AuthContext","axios","OpinionWithComments","props","id","commentsList","setCommentsList","newComment","setNewCommement","refresh","setRefresh","authState","get","then","res","data","deleteCommentFunc","delete","headers","accessToken","localStorage","getItem","setTimeout","refreshFuncProp","addComment","post","commentBody","PostId","error","alert","userName","opinion","comment","length","map","key","username","color","e","target","value"],"sources":["/Users/monte/Dev/udpateFrontMontech/FullStack-Front-Montech/client/src/components/OpinionWithComments/OpinionWithComments.js"],"sourcesContent":["import React, { useState, useEffect, useContext } from 'react'\nimport { useParams } from 'react-router-dom';\nimport './OpinionWithCommentsStyle.css'\nimport { AuthContext } from '../../helpers/AuthContext'\nimport axios from 'axios';\n\nfunction OpinionWithComments(props) {\n\n\n  let {id} = useParams(); // returns an object of key/value pairs of URL parameters\n\n  const [commentsList, setCommentsList] = useState([])\n  const [newComment, setNewCommement] = useState(\"\");\n  const [refresh, setRefresh] = useState(true);\n\n  const {authState} = useContext(AuthContext);\n\n\n\n  useEffect( () => {\n\n\n    axios.get(`https://fullstack-api-montech.herokuapp.com/comments/${id}`)\n      .then( (res) => { \n        setCommentsList(res.data);\n      });\n  },[refresh]); // to refresh the component after send new comment\n\n\n  const deleteCommentFunc = (id) =>{\n    axios.delete(`https://fullstack-api-montech.herokuapp.com/comments/${id}`,\n        {headers: {accessToken: localStorage.getItem(\"accessToken\")}}\n        ).then(setTimeout(() => \n        {\n             props.refreshFuncProp()\n            }, 100));\n      ;\n  }\n\n\n\n  const addComment = () => {\n    axios.post(\"https://fullstack-api-montech.herokuapp.com/comments/\", \n      {\n        commentBody: newComment,\n        PostId: id\n      },\n      {\n        headers:\n        {\n          accessToken: localStorage.getItem(\"accessToken\") //gettin the accessToken from \"cookies\".. \"accessToken is the key we chose\"\n        }\n      }\n    )\n    .then( (res) => {\n      if (res.data.error) {return alert(\"no estas loggeado\")}\n      setNewCommement(\"\"); //to clear input words\n      props.refreshFuncProp();\n    })\n  }\n\n\n \n\n  return (\n    <div className='opinionWithComments-container'>\n      <div className='opinionSection'>\n        <h3>{props.userName}</h3>\n        <p> \n          {props.opinion}\n        </p>\n      </div>\n\n      {(props.comment) && (props.comment.length > 0) &&\n      <div className='commentTitle'>\n        <h3>Comentarios</h3> \n\n        {props.comment.map( (comment, key) => {\n          return(\n            <div className='commentsSection' key={key}>\n              <div className='commentUsername' > {comment.username}: </div>\n              <div className='commentBody'> {comment.commentBody}</div>\n              {authState.username === comment.username && \n                <div \n                    className='deleteIMG' \n                    style={{color:'yellow'}} \n                    onClick={ () => {deleteCommentFunc(comment.id)}}>\n                </div> \n              }\n            </div>\n        )})}\n      </div>\n      }\n\n      <div className='footer'>\n          <input className='inputComment' type=\"text\" placeholder='ComentÃ¡ algo...' autoComplete='off' value={newComment} onChange={ (e) => {setNewCommement(e.target.value)} }/> \n          <button className='buttonComment' onClick={addComment} >Enviar</button>\n      </div>\n\n    </div>\n  )\n}\n\nexport default OpinionWithComments\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,UAArC,QAAuD,OAAvD;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,OAAO,gCAAP;AACA,SAASC,WAAT,QAA4B,2BAA5B;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;AAEA,SAASC,mBAAT,CAA6BC,KAA7B,EAAoC;EAAA;;EAGlC,IAAI;IAACC;EAAD,IAAOL,SAAS,EAApB,CAHkC,CAGV;;EAExB,MAAM,CAACM,YAAD,EAAeC,eAAf,IAAkCV,QAAQ,CAAC,EAAD,CAAhD;EACA,MAAM,CAACW,UAAD,EAAaC,eAAb,IAAgCZ,QAAQ,CAAC,EAAD,CAA9C;EACA,MAAM,CAACa,OAAD,EAAUC,UAAV,IAAwBd,QAAQ,CAAC,IAAD,CAAtC;EAEA,MAAM;IAACe;EAAD,IAAcb,UAAU,CAACE,WAAD,CAA9B;EAIAH,SAAS,CAAE,MAAM;IAGfI,KAAK,CAACW,GAAN,CAAW,wDAAuDR,EAAG,EAArE,EACGS,IADH,CACUC,GAAD,IAAS;MACdR,eAAe,CAACQ,GAAG,CAACC,IAAL,CAAf;IACD,CAHH;EAID,CAPQ,EAOP,CAACN,OAAD,CAPO,CAAT,CAbkC,CAoBpB;;EAGd,MAAMO,iBAAiB,GAAIZ,EAAD,IAAO;IAC/BH,KAAK,CAACgB,MAAN,CAAc,wDAAuDb,EAAG,EAAxE,EACI;MAACc,OAAO,EAAE;QAACC,WAAW,EAAEC,YAAY,CAACC,OAAb,CAAqB,aAArB;MAAd;IAAV,CADJ,EAEMR,IAFN,CAEWS,UAAU,CAAC,MAClB;MACKnB,KAAK,CAACoB,eAAN;IACA,CAHY,EAGV,GAHU,CAFrB;IAME;EACH,CARD;;EAYA,MAAMC,UAAU,GAAG,MAAM;IACvBvB,KAAK,CAACwB,IAAN,CAAW,uDAAX,EACE;MACEC,WAAW,EAAEnB,UADf;MAEEoB,MAAM,EAAEvB;IAFV,CADF,EAKE;MACEc,OAAO,EACP;QACEC,WAAW,EAAEC,YAAY,CAACC,OAAb,CAAqB,aAArB,CADf,CACmD;;MADnD;IAFF,CALF,EAYCR,IAZD,CAYQC,GAAD,IAAS;MACd,IAAIA,GAAG,CAACC,IAAJ,CAASa,KAAb,EAAoB;QAAC,OAAOC,KAAK,CAAC,mBAAD,CAAZ;MAAkC;;MACvDrB,eAAe,CAAC,EAAD,CAAf,CAFc,CAEO;;MACrBL,KAAK,CAACoB,eAAN;IACD,CAhBD;EAiBD,CAlBD;;EAuBA,oBACE;IAAK,SAAS,EAAC,+BAAf;IAAA,wBACE;MAAK,SAAS,EAAC,gBAAf;MAAA,wBACE;QAAA,UAAKpB,KAAK,CAAC2B;MAAX;QAAA;QAAA;QAAA;MAAA,QADF,eAEE;QAAA,UACG3B,KAAK,CAAC4B;MADT;QAAA;QAAA;QAAA;MAAA,QAFF;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,EAQI5B,KAAK,CAAC6B,OAAP,IAAoB7B,KAAK,CAAC6B,OAAN,CAAcC,MAAd,GAAuB,CAA3C,iBACD;MAAK,SAAS,EAAC,cAAf;MAAA,wBACE;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADF,EAGG9B,KAAK,CAAC6B,OAAN,CAAcE,GAAd,CAAmB,CAACF,OAAD,EAAUG,GAAV,KAAkB;QACpC,oBACE;UAAK,SAAS,EAAC,iBAAf;UAAA,wBACE;YAAK,SAAS,EAAC,iBAAf;YAAA,gBAAoCH,OAAO,CAACI,QAA5C;UAAA;YAAA;YAAA;YAAA;UAAA,QADF,eAEE;YAAK,SAAS,EAAC,aAAf;YAAA,gBAA+BJ,OAAO,CAACN,WAAvC;UAAA;YAAA;YAAA;YAAA;UAAA,QAFF,EAGGf,SAAS,CAACyB,QAAV,KAAuBJ,OAAO,CAACI,QAA/B,iBACC;YACI,SAAS,EAAC,WADd;YAEI,KAAK,EAAE;cAACC,KAAK,EAAC;YAAP,CAFX;YAGI,OAAO,EAAG,MAAM;cAACrB,iBAAiB,CAACgB,OAAO,CAAC5B,EAAT,CAAjB;YAA8B;UAHnD;YAAA;YAAA;YAAA;UAAA,QAJJ;QAAA,GAAsC+B,GAAtC;UAAA;UAAA;UAAA;QAAA,QADF;MAYA,CAbD,CAHH;IAAA;MAAA;MAAA;MAAA;IAAA,QATF,eA6BE;MAAK,SAAS,EAAC,QAAf;MAAA,wBACI;QAAO,SAAS,EAAC,cAAjB;QAAgC,IAAI,EAAC,MAArC;QAA4C,WAAW,EAAC,oBAAxD;QAA0E,YAAY,EAAC,KAAvF;QAA6F,KAAK,EAAE5B,UAApG;QAAgH,QAAQ,EAAI+B,CAAD,IAAO;UAAC9B,eAAe,CAAC8B,CAAC,CAACC,MAAF,CAASC,KAAV,CAAf;QAAgC;MAAnK;QAAA;QAAA;QAAA;MAAA,QADJ,eAEI;QAAQ,SAAS,EAAC,eAAlB;QAAkC,OAAO,EAAEhB,UAA3C;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAFJ;IAAA;MAAA;MAAA;MAAA;IAAA,QA7BF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAqCD;;GA/FQtB,mB;UAGIH,S;;;KAHJG,mB;AAiGT,eAAeA,mBAAf"},"metadata":{},"sourceType":"module"}