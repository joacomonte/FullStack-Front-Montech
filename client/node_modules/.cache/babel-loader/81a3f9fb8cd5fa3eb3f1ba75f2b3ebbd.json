{"ast":null,"code":"var _jsxFileName = \"/Users/monte/Dev/udpateFrontMontech/FullStack-Front-Montech/client/src/pages/Opinion.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport axios from 'axios';\nimport OpinionItem from '../components/OpinionItem/OpinionItem.js';\nimport OpinionWithComments from '../components/OpinionWithComments/OpinionWithComments.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Opinion() {\n  _s();\n\n  let {\n    id\n  } = useParams(); // returns an object of key/value pairs of URL parameters\n\n  const [postObj, setPostObj] = useState({});\n  const [commentsList, setCommentsList] = useState([]);\n  const [newComment, setNewCommement] = useState(\"\");\n  const [refresh, setRefresh] = useState(true); //puts comments into a list\n\n  useEffect(() => {\n    axios.get(`https://fullstack-api-montech.herokuapp.com/posts/byId/${id}`).then(res => {\n      setPostObj(res.data);\n    });\n    axios.get(`https://fullstack-api-montech.herokuapp.com/comments/${id}`).then(res => {\n      setCommentsList(res.data);\n    });\n  }, [refresh]); // to refresh the component after send new comment\n\n  const refreshFunc = () => {\n    setRefresh(!refresh);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"opinionPage-content\",\n    children: /*#__PURE__*/_jsxDEV(OpinionWithComments, {\n      comment: commentsList,\n      refreshFuncProp: refreshFunc,\n      ...postObj\n    }, id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 11\n  }, this);\n}\n\n_s(Opinion, \"fovYtmvUc1DniPVP+D9Om8glfAg=\", false, function () {\n  return [useParams];\n});\n\n_c = Opinion;\nexport default Opinion;\n\nvar _c;\n\n$RefreshReg$(_c, \"Opinion\");","map":{"version":3,"names":["React","useState","useEffect","useParams","axios","OpinionItem","OpinionWithComments","Opinion","id","postObj","setPostObj","commentsList","setCommentsList","newComment","setNewCommement","refresh","setRefresh","get","then","res","data","refreshFunc"],"sources":["/Users/monte/Dev/udpateFrontMontech/FullStack-Front-Montech/client/src/pages/Opinion.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport axios from 'axios';\n\nimport OpinionItem from '../components/OpinionItem/OpinionItem.js'\nimport OpinionWithComments from '../components/OpinionWithComments/OpinionWithComments.js';\n\n\nfunction Opinion() \n{\n\n    let {id} = useParams(); // returns an object of key/value pairs of URL parameters\n\n    const[postObj, setPostObj] = useState({});\n\n    const [commentsList, setCommentsList] = useState([])\n\n    const [newComment, setNewCommement] = useState(\"\");\n\n    const [refresh, setRefresh] = useState(true);\n\n\n\n\n\n    //puts comments into a list\n\n\n\n    useEffect( () => {\n\n      axios.get(`https://fullstack-api-montech.herokuapp.com/posts/byId/${id}`)\n        .then( (res) => { \n          setPostObj(res.data)\n        });\n\n      axios.get(`https://fullstack-api-montech.herokuapp.com/comments/${id}`)\n        .then( (res) => { \n          setCommentsList(res.data);\n        });\n    },[refresh]); // to refresh the component after send new comment\n\n\n    const refreshFunc = () =>{\n      setRefresh(!refresh);\n    }\n\n\n  return (\n          <div className='opinionPage-content'>\n\n            <OpinionWithComments \n              key={id} \n              comment={commentsList} \n              refreshFuncProp={refreshFunc} \n              {...postObj}/>\n\n\n          </div>\n\n  )\n}\n\nexport default Opinion\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAOC,WAAP,MAAwB,0CAAxB;AACA,OAAOC,mBAAP,MAAgC,0DAAhC;;;AAGA,SAASC,OAAT,GACA;EAAA;;EAEI,IAAI;IAACC;EAAD,IAAOL,SAAS,EAApB,CAFJ,CAE4B;;EAExB,MAAK,CAACM,OAAD,EAAUC,UAAV,IAAwBT,QAAQ,CAAC,EAAD,CAArC;EAEA,MAAM,CAACU,YAAD,EAAeC,eAAf,IAAkCX,QAAQ,CAAC,EAAD,CAAhD;EAEA,MAAM,CAACY,UAAD,EAAaC,eAAb,IAAgCb,QAAQ,CAAC,EAAD,CAA9C;EAEA,MAAM,CAACc,OAAD,EAAUC,UAAV,IAAwBf,QAAQ,CAAC,IAAD,CAAtC,CAVJ,CAgBI;;EAIAC,SAAS,CAAE,MAAM;IAEfE,KAAK,CAACa,GAAN,CAAW,0DAAyDT,EAAG,EAAvE,EACGU,IADH,CACUC,GAAD,IAAS;MACdT,UAAU,CAACS,GAAG,CAACC,IAAL,CAAV;IACD,CAHH;IAKAhB,KAAK,CAACa,GAAN,CAAW,wDAAuDT,EAAG,EAArE,EACGU,IADH,CACUC,GAAD,IAAS;MACdP,eAAe,CAACO,GAAG,CAACC,IAAL,CAAf;IACD,CAHH;EAID,CAXQ,EAWP,CAACL,OAAD,CAXO,CAAT,CApBJ,CA+BkB;;EAGd,MAAMM,WAAW,GAAG,MAAK;IACvBL,UAAU,CAAC,CAACD,OAAF,CAAV;EACD,CAFD;;EAKF,oBACQ;IAAK,SAAS,EAAC,qBAAf;IAAA,uBAEE,QAAC,mBAAD;MAEE,OAAO,EAAEJ,YAFX;MAGE,eAAe,EAAEU,WAHnB;MAAA,GAIMZ;IAJN,GACOD,EADP;MAAA;MAAA;MAAA;IAAA;EAFF;IAAA;IAAA;IAAA;EAAA,QADR;AAaD;;GArDQD,O;UAGMJ,S;;;KAHNI,O;AAuDT,eAAeA,OAAf"},"metadata":{},"sourceType":"module"}